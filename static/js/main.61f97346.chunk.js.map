{"version":3,"sources":["../node_modules/typescript/lib sync","pixijs/App.js","redux/canvasObjects/canvasObjects.types.ts","redux/canvasObjects/canvasObjects.reducer.ts","redux/canvas/canvas.types.ts","redux/canvas/canvas.reducer.ts","redux/root-reducer.ts","redux/store.ts","pixijs/DisplayObject.js","pixijs/TextObject.js","pixijs/ImageObject.js","pixijs/BackgroundImage.js","pixijs/pixijs.utils.ts","redux/canvasObjects/canvasObjects.actions.ts","redux/canvas/canavs.actions.ts","utils/image.utils.ts","components/Input.component.tsx","hooks/useCanvasLimiter.ts","components/CanvasBackgroundSettings.component.tsx","data/templates.ts","components/CanvasTemplateList.component.tsx","components/CanvasEditorOverlay.tsx","components/ActiveObjectManipulator.component.tsx","components/CanvasArea.component.tsx","components/RainbowButton.component.tsx","components/CanvasTextCreator.component.tsx","hooks/useFaceExtractor.ts","hooks/useInterval.ts","components/TimeSinceDisplay.component.tsx","components/ImageInput.component.tsx","components/CanvasImageCreator.component.tsx","components/CanvasObjectCreator.component.tsx","components/DownloadSection.component.jsx","components/CanvasTextEditor.component.tsx","components/CanvasImageEditor.component.tsx","components/ActiveObjectEditor.component.tsx","components/CanvasObjectList.component.tsx","components/OpenCanvasEditor.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","app","background","initalState","objects","objectsList","activeObject","canvasObjectReducer","state","action","type","types","console","log","canvasObject","payload","deleted","filter","dimensions","width","height","maxDimensions","backgroundImage","showChoseBackgroundOverlay","renderToggle","canvasReducer","renderToggel","image","rootReducer","combineReducers","canvasObjects","canvas","store","createStore","applyMiddleware","thunk","DisplayObject","object","setObjectData","cachedObject","JSON","stringify","shouldUpdate","newObject","getData","update","updateBaseProperties","updateObject","x","y","rotation","getWidth","getHeight","PIXI","TextObject","text","style","wordWrap","wordWrapWidth","fill","color","string2hex","stroke","borderColor","strokeThickness","borderWidth","fontSize","pivot","set","textContent","beginFill","drawRect","endFill","mask","addChild","ImageObject","hasLoaded","Promise","res","rej","count","intervalHandle","setInterval","sprite","clearInterval","flipHorizontal","scale","Math","abs","anchor","from","src","BackgroundImage","canvasData","_sprite","removeChild","url","process","displayObjects","DISPLAY_OBJECT_TYPES","createDisplayObject","a","displayObjectExists","getNewDisplayObject","displayObject","interactive","buttonMode","zIndex","onClick","event","dispatch","setActiveObject","on","stage","createImageObject","creatTextObject","imageObject","subscribe","getState","view","renderer","resize","Object","map","element","removeObject","forEach","objID","objSettings","updateObjects","createCanvasObject","createCanvasText","options","canvasTextOptions","boderColor","flipVertical","uuid","canvasText","limitWithFixedRatio","createCanvasImage","canvasImageOptions","canvasImage","imageWidth","imageHeight","updateCanvasObject","setCanvasDimensions","setCanvasBackgroundImage","setShowImageOverlay","show","loadImage","reject","img","Image","onload","onerror","URL","createObjectURL","loadImageFromURL","imageURL","canvasToBlob","toBlob","blob","Input","label","suffix","disabled","props","className","useCanvasLimiter","useSelector","maxWidth","maxHeight","limit","round","CanvasBackgroundSettings","useDispatch","onImageChange","target","files","loadedImage","value","onChange","newWidth","parseInt","newHeight","accept","name","MEME_TEMPLATES","path","CanvasTemplateListItem","template","templatePath","getTemplatePath","title","CanvasTemplateList","templateContainer","useRef","useState","searchTerm","setSearchTerm","currPage","setCurrPage","itemsPerPage","pageCount","setPageCount","pageItems","setPageItems","useEffect","filteredTempaltes","searchTemplates","ceil","length","getPageItems","updatePageItems","items","page","start","end","slice","smallSearch","toLowerCase","includes","onTemplateClick","placeholder","ref","Array","_","idx","CanvasEditorOverlay","HANDLE_SIZE","RotationHandle","container","dragging","setDragging","document","addEventListener","onMouseMove","removeEventListener","dragEnd","bounds","current","getBoundingClientRect","mouseX","clientX","mouseY","clientY","rad","atan2","PI","body","cursor","onPointerDown","backgroundColor","DragHandle","size","anchorX","anchorY","m","num","max","freeNewWidth","lockedNewWidth","newY","newX","offset","top","undefined","left","bottom","right","transform","ActiveObjectManipulator","startCoords","setStartCoords","activeObj","clamp","min","correctedX","correctedY","clampedX","clampedY","display","PADDING","transformOrigin","xOffset","yOffset","onPointerUp","CanvasArea","canvasContainer","canvasArea","useLayoutEffect","updateSize","setCanvasMaxDimensions","window","resolution","preserveDrawingBuffer","appendChild","sortableChildren","init","RainbowButton","children","CanvasTextCreator","setText","newText","blazefaceModel","bodyPixModel","useFaceExtractor","canvasRef","extractedFaces","setExtractedFaces","message","time","isLoading","status","setStatus","loadModels","setStatusMessage","blazeface","bodyPix","architecture","outputStride","quantBytes","Date","extractFaces","extractFaceFromImage","faces","predictFaces","predictedFaceDimensions","faceImages","i","cropFace","segmentFace","faceImage","split","push","predictions","getContext","drawImage","estimateFaces","predictionDimensions","topLeft","bottomRight","startY","startX","segmentPerson","data","ctx","getImageData","imgData","newImg","createImageData","newImgData","r","g","b","putImageData","useInterval","callback","delay","savedCallback","TimeSinceDisplay","startDate","refreshRate","timeString","setTimeString","newTimeString","delta","floor","getTime","minutes","seconds","getCurrentDateString","defaultProps","ImageInput","setImage","onAddImage","onExtractFaces","onAddFaceImage","TABS","TEXT","IMAGE","CanvasObjectCreator","activeTab","setActiveTab","entries","renderContainer","DownloadSection","link","createElement","download","href","toDataURL","click","CanvasTextEditor","onNumberChange","parsed","onColorChange","CanvasImageEditor","checked","ActiveObjectEditor","renderEditor","CanvasObjectItem","item","isActive","renderIcon","renderItemContent","stopPropagation","CanvasObjectList","objectKey","obj","OpenCanvasEditorSection","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.61f97346.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 185;","import * as PIXI from \"pixi.js\";\r\n\r\nimport store from \"../redux/store\"\r\nimport TextObject from \"./TextObject\"\r\nimport ImageObject from \"./ImageObject\";\r\nimport BackgroundImage from \"./BackgroundImage\"\r\nimport {updateCanvasObject, setActiveObject} from \"../redux/canvasObjects/canvasObjects.actions\"\r\n\r\nexport let app;\r\nlet background;\r\nconst displayObjects = {} \r\n\r\nexport const DISPLAY_OBJECT_TYPES = {\r\n    IMAGE_OBJECT: \"IMAGE_OBJECT\",\r\n    TEXT_OBJECT: \"TEXT_OBJECT\"\r\n}\r\n\r\n\r\n\r\nexport const createDisplayObject = async (object) => {\r\n   \r\n    if(object && object.id && !displayObjectExists(object.id)){\r\n        // create object \r\n        const displayObject = await getNewDisplayObject(object);\r\n\r\n        displayObject.interactive = true;\r\n        displayObject.buttonMode = true;\r\n        displayObject.zIndex = 5;\r\n\r\n        displayObject.pivot.set(displayObject.width/2, displayObject.height/2)\r\n\r\n        const onClick = (event) => {\r\n            console.log(\"on item click!!!\")\r\n            console.log(object.id)\r\n            store.dispatch(setActiveObject(object.id))   \r\n        } \r\n\r\n        displayObject    // events for drag start\r\n        .on('mousedown', onClick)\r\n        .on('touchstart', onClick)\r\n\r\n        // add to stage\r\n        app.stage.addChild(displayObject)\r\n\r\n        displayObjects[object.id] = displayObject\r\n        console.log(displayObjects)\r\n        return displayObject\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\nconst getNewDisplayObject = async (object) => {\r\n    switch(object.type){\r\n        case DISPLAY_OBJECT_TYPES.IMAGE_OBJECT:\r\n            return createImageObject(object);\r\n        case DISPLAY_OBJECT_TYPES.TEXT_OBJECT:  \r\n            return await creatTextObject(object); \r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst createImageObject = async (object) => {\r\n    const imageObject = new ImageObject(object)\r\n    await imageObject.hasLoaded();\r\n    return imageObject;\r\n}\r\n\r\nconst creatTextObject = async (object) => new TextObject(object)\r\n\r\n\r\nconst displayObjectExists = (id) => {\r\n    return id in displayObjects\r\n}\r\n\r\nconst getDisplayObject = (id) => {\r\n    return displayObjectExists(id) ? displayObjects[id] : null;\r\n}\r\n\r\nconst removeDisplayObject = (id) => {\r\n    const objToDelete = getDisplayObject(id)\r\n    if(objToDelete){\r\n        app.stage.removeChild(objToDelete);\r\n        displayObjects[id] = null\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst updateObjects = ({objects, objectsList, activeObject}) => {\r\n    objectsList.forEach(objID => {\r\n        console.log(objID)\r\n        if(displayObjectExists(objID)){    \r\n            const objSettings = objects[objID]\r\n            const pixiElement = displayObjects[objID]\r\n            pixiElement.update(objSettings);\r\n        }\r\n    });\r\n}\r\n\r\n\r\nconst resizeCanvas = (width,height) => {\r\n    app.view.width = width;\r\n    app.view.height = height;\r\n    console.log(\"resize canvas\")\r\n    app.renderer.resize(width,height);\r\n    //app.renderer.resize(width, height);\r\n}\r\n\r\nconst rerenderCanvasSize = () => {\r\n\r\n}\r\n\r\n/*\r\n    fit dimensiosn of contianer\r\n    have given width or height\r\n    scale down \r\n\r\n*/\r\n\r\nconst removeObject = (id) => {\r\n    const element = displayObjects[id]\r\n    app.stage.removeChild(element)\r\n    displayObjects[id] = null\r\n}\r\n\r\n\r\nexport const render = () => {\r\n    if(app) {\r\n    const {canvasObjects, canvas} = store.getState();\r\n\r\n\r\n    // resize canvas \r\n    const {dimensions} = canvas;\r\n    resizeCanvas(dimensions.width, dimensions.height)\r\n\r\n     // clear deleted objects = \r\n     Object.keys(canvasObjects.objects).map((id) => {\r\n        const object = canvasObjects.objects[id];\r\n        if(object.deleted) removeObject(id)\r\n    })\r\n\r\n    // update background image\r\n    background.update(canvas)\r\n\r\n    // add new objects\r\n   // addNewObjects(canvasObjects)\r\n\r\n    // clear delete objects\r\n    \r\n    // update objects\r\n    updateObjects(canvasObjects)\r\n    }\r\n  \r\n}\r\n\r\n\r\nexport const init = (container) => {\r\n    if(app) return null; \r\n\r\n    app = new PIXI.Application({\r\n       backgroundColor: 0xffffff, resolution: 1, preserveDrawingBuffer: true\r\n    });\r\n\r\n    \r\n\r\n    container.appendChild(app.view)  \r\n    app.stage.sortableChildren = true; \r\n   \r\n    \r\n    // create canvas background\r\n    background = new BackgroundImage();\r\n    app.stage.addChild(background)\r\n\r\n}\r\n\r\nstore.subscribe(render)\r\n\r\n\r\n\r\n","\r\nexport default {\r\n    DELETE_CANVAS_OBJECT: \"DELETE_CANVAS_OBJECT\",\r\n    CREATE_CANVAS_OBJECT: \"CREATE_CANVAS_OBJECT\",\r\n    UPDATE_CANVAS_OBJECT: \"UPDATE_CANVAS_OBJECT\",\r\n    SET_ACTIVE_OBJECT: \"SET_ACTIVE_OBJECT\"\r\n}\r\n","\r\nimport { type } from \"os\";\r\nimport types from \"./canvasObjects.types\";\r\n\r\ninterface State {\r\n    objects: {[key: string]: object},\r\n    objectsList: string[],\r\n    activeObject: string | null,\r\n}\r\n\r\nconst initalState: State = {\r\n    objects: {},\r\n    objectsList: [],\r\n    activeObject: null, // id\r\n}\r\n\r\nconst canvasObjectReducer = (state=initalState, action:any) => {\r\n    switch(action.type){\r\n        case types.CREATE_CANVAS_OBJECT:\r\n            console.log(\"create canvas object\")\r\n            console.log(state.objectsList)\r\n            return {\r\n                ...state,\r\n                objects: {...state.objects, [action.canvasObject.id]: action.canvasObject},\r\n                objectsList: [...state.objectsList, action.canvasObject.id],\r\n                activeObject: action.canvasObject.id,\r\n            };\r\n\r\n        case types.SET_ACTIVE_OBJECT:\r\n            return {\r\n                ...state,\r\n                activeObject: action.id\r\n            }\r\n        case types.UPDATE_CANVAS_OBJECT:\r\n            return {\r\n                ...state,\r\n                objects: {\r\n                    ...state.objects,\r\n                    [action.id]: {\r\n                        ...state.objects[action.id],\r\n                        ...action.canvasObject,\r\n                    }\r\n                }\r\n            }\r\n\r\n        case types.DELETE_CANVAS_OBJECT:\r\n            return {\r\n                ...state,\r\n                objects: {\r\n                    ...state.objects,\r\n                    [action.payload]: {\r\n                        ...state.objects[action.payload],\r\n                        deleted: true,\r\n                    }\r\n                },\r\n                activeObject: state.activeObject == action.payload ? null : state.activeObject,\r\n                objectsList: state.objectsList.filter((id) => id !== action.payload),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default canvasObjectReducer;\r\n\r\n\r\n","export default {\r\n    SET_CANVAS_DIMENSIONS: \"SET_CANVAS_DIMENSIONS\",\r\n    SET_CANVAS_MAX_DIMENSIONS: \"SET_CANVAS_MAX_DIMENSIONS\",\r\n    SET_BACKGROUND_IMAGE: \"SET_BACKGROUND_IMAGE\",\r\n    SET_SHOW_IMAGE_OVERLAY: \"SET_SHOW_IMAGE_OVERLAY\",\r\n    TRIGGER_RERENDER: \"TRIGGER_RERENDER\",\r\n    CLEAR_CANVAS: \"CLEAR_CANVAS\"\r\n}","\r\nimport { type } from \"os\"\r\nimport types from \"./canvas.types\"\r\n\r\ninterface canvasState {\r\n    dimensions: {\r\n        width: number,\r\n        height: number,\r\n    },\r\n    maxDimensions: {\r\n        width: number,\r\n        height: number\r\n    }\r\n    backgroundImage: string | null,\r\n    showChoseBackgroundOverlay: boolean, \r\n    renderToggle: boolean   \r\n}\r\n\r\nconst initalState:canvasState = {\r\n    dimensions: {\r\n        width: 600,\r\n        height: 400,\r\n    },\r\n    maxDimensions: {\r\n        width: 600,\r\n        height: 400,\r\n    },\r\n    backgroundImage: null,\r\n    showChoseBackgroundOverlay: true, \r\n    renderToggle: false,\r\n}\r\n\r\nconst canvasReducer = (state=initalState, action:any) => {\r\n  \r\n    switch(action.type){\r\n\r\n\r\n        case types.TRIGGER_RERENDER:\r\n            return {...state, renderToggel: !state.renderToggle}\r\n        \r\n        case types.SET_CANVAS_DIMENSIONS: \r\n        \r\n            return {...state, dimensions: action.payload }\r\n\r\n        case types.SET_BACKGROUND_IMAGE:\r\n            return {...state, dimensions: {width: action.payload.width, height: action.payload.height}, backgroundImage: action.payload.image, showChoseBackgroundOverlay: false}\r\n\r\n        case types.SET_CANVAS_MAX_DIMENSIONS:\r\n            return {...state, maxDimensions: action.payload }\r\n\r\n        case types.CLEAR_CANVAS:\r\n            return {...state, backgroundImage: null}\r\n\r\n        case types.SET_SHOW_IMAGE_OVERLAY:\r\n            console.log(\"change show\")\r\n            return {...state, showChoseBackgroundOverlay: action.payload}\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default canvasReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport canvasObjects from \"./canvasObjects/canvasObjects.reducer\"\r\nimport canvas from \"./canvas/canvas.reducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    canvasObjects,\r\n    canvas,\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware} from 'redux'\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./root-reducer\"\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch","import * as PIXI from \"pixi.js\";\r\nimport { getTextOfJSDocComment } from \"typescript\";\r\n\r\n\r\nclass DisplayObject extends PIXI.Container{\r\n\r\n    constructor(object){\r\n        super();\r\n        this.object = object;\r\n        this.cachedObject = JSON.stringify(this.object)\r\n\r\n        this.x = object.x ? object.x : 0;\r\n        this.y = object.y ? object.y : 0;\r\n    }\r\n\r\n    setObjectData = (object) => {\r\n        this.object = object;\r\n        this.cachedObject = JSON.stringify(this.object)\r\n    }\r\n\r\n\r\n    shouldUpdate = (newObject) => {\r\n        return JSON.stringify(newObject) !== this.cachedObject\r\n    }\r\n\r\n    getData = () => this.object\r\n    \r\n \r\n    update = (object) => {\r\n        if(!this.shouldUpdate(object)) return;\r\n\r\n        this.setObjectData(object);\r\n        this.updateBaseProperties(object)\r\n        this.updateObject(object)\r\n    }\r\n\r\n    // update x, y and rotation (check update)\r\n    updateBaseProperties = (object) => {\r\n\r\n        this.x = object.x;\r\n        this.y = object.y;\r\n        this.rotation = object.rotation || 0;\r\n    }\r\n\r\n    updateObject = (object) => {}\r\n\r\n    getWidth = () => this.width;\r\n    getHeight = () => this.height;\r\n}\r\n\r\nexport default DisplayObject;","import * as PIXI from \"pixi.js\";\r\nimport DisplayObject from \"./DisplayObject\";\r\n\r\nclass TextObject extends DisplayObject{\r\n\r\n    constructor(object){\r\n        super(object);\r\n        this.textContent = object.text;\r\n\r\n\r\n        \r\n        this.text = new PIXI.Text(this.textContent);\r\n        this.background = new PIXI.Graphics();\r\n        this.background.beginFill(0xff0000);\r\n        this.background.drawRect(0,0,this.text.width, this.text.height);\r\n        this.background.endFill()\r\n\r\n        this.mask = this.background;\r\n\r\n        this.updateObject(object)\r\n        \r\n        this.addChild(this.background, this.text);\r\n    }\r\n\r\n     // update custom properties (includes width, height)\r\n     updateObject = (object) => {\r\n\r\n        // handle text dimensions\r\n        this.text.style.wordWrap = true;\r\n        this.text.style.wordWrapWidth = object.width;    \r\n        this.background.width = object.width;\r\n        this.background.height = object.height;\r\n\r\n        // handle text styleing\r\n        this.text.style.fill = object.color ? PIXI.utils.string2hex(object.color) : 0x000000;\r\n        this.text.style.stroke = object.borderColor ? PIXI.utils.string2hex(object.borderColor) : 0x000000;\r\n        this.text.style.strokeThickness = object?.borderWidth || 0;\r\n        this.text.style.fontSize = object?.fontSize || 32;\r\n\r\n        this.pivot.set(object.width / 2, object.height / 2)\r\n     }   \r\n\r\n   \r\n}\r\n\r\nexport default TextObject;","import * as PIXI from \"pixi.js\";\r\nimport DisplayObject from \"./DisplayObject\";\r\nimport store from \"../redux/store\"\r\nimport { updateCanvasObject } from \"../redux/canvasObjects/canvasObjects.actions\";\r\n\r\n\r\n\r\nclass ImageObject extends DisplayObject{\r\n\r\n    constructor(object){\r\n        super(object);\r\n\r\n        // create text\r\n        this.sprite = PIXI.Sprite.from(object.src)\r\n        this.addChild(this.sprite);\r\n\r\n   \r\n    }\r\n\r\n\r\n\r\n    hasLoaded = () =>  new Promise((res,rej) => {\r\n        const timeout = 20;\r\n        const maxCounts = 30;\r\n        let count = 0;\r\n       \r\n        const intervalHandle = setInterval(() => {\r\n            console.log(this.sprite.width)\r\n            if(this.sprite.width !== 1){\r\n                clearInterval(intervalHandle);\r\n                res();\r\n            }\r\n            if(count >= maxCounts){\r\n                clearInterval(intervalHandle);\r\n                rej();\r\n            }\r\n            count++;\r\n        }, timeout)\r\n    })\r\n\r\n\r\n    \r\n\r\n\r\n    // update custom properties (includes width, height)\r\n    updateObject = (object) => {\r\n        this.sprite.width = object.width;\r\n        this.sprite.height = object.height;\r\n\r\n\r\n        if(object.flipHorizontal){\r\n            this.sprite.scale.x = Math.abs(this.sprite.scale.x) * -1; \r\n            this.sprite.anchor.x = 1;\r\n        }else{\r\n            this.sprite.scale.x = Math.abs(this.sprite.scale.x); \r\n            this.sprite.anchor.x = 0;\r\n        }\r\n      \r\n        this.pivot.set(object.width / 2, object.height / 2)\r\n\r\n       \r\n\r\n    }  \r\n\r\n    getWidth = () => this.sprite.width;\r\n    getHeight = () => this.sprite.height;\r\n}\r\n\r\nexport default ImageObject;","import DisplayObject from \"./DisplayObject\";\r\n\r\n\r\nimport * as PIXI from \"pixi.js\";\r\n\r\n\r\n\r\nclass BackgroundImage extends PIXI.Container{\r\n\r\n    constructor(object){\r\n        super(object);\r\n\r\n        // create text\r\n        this._sprite = null;\r\n        this.sprite = null;\r\n\r\n        this.background = new PIXI.Graphics();\r\n        this.background.beginFill(0xff0000);\r\n        this.background.drawRect(0,0,600, 400);\r\n        this.background.endFill()\r\n\r\n        this.addChild(this.background)\r\n    }\r\n\r\n    // update custom properties (includes width, height)\r\n    update = (canvasData) => {\r\n         console.log(canvasData)\r\n        // set width of container\r\n        console.log(\"update background\")\r\n    \r\n        this.background.width = canvasData.dimensions.width;\r\n        this.background.height = canvasData.dimensions.height;\r\n\r\n        console.log(this.background.height)\r\n\r\n   \r\n        if(canvasData.backgroundImage !== this._sprite){\r\n           \r\n            // load new sprite\r\n            if(canvasData.backgroundImage === null){\r\n                this.removeChild(this.sprite)\r\n            }else{\r\n                console.log(\"insert new sprite\")\r\n                // check if full url\r\n                this.removeChild(this.sprite)\r\n                this.sprite = null;\r\n                const url = process.env.PUBLIC_URL + canvasData.backgroundImage\r\n\r\n                console.log(\"sprite data\")\r\n                this.sprite = PIXI.Sprite.from(url)\r\n                console.log(canvasData.dimensions.width, canvasData.dimensions.height )\r\n          \r\n                this.sprite.width = this.background.width;\r\n                this.sprite.height = this.background.height;\r\n        \r\n             \r\n                this.addChild(this.sprite)\r\n\r\n            }\r\n            this._sprite = canvasData.backgroundImage;\r\n        }\r\n\r\n       \r\n \r\n       \r\n    }  \r\n\r\n}\r\n\r\nexport default BackgroundImage;","import {CanvasObject, CanvasObjectBase, ImageCanvasObject, TextCanvasObject} from \"../types/canvasObjects.types\"\r\nimport {v4 as uuid} from \"uuid\"\r\nimport {DISPLAY_OBJECT_TYPES} from \"./App\"\r\n\r\nexport const createTextCanvasObject = (object:any): TextCanvasObject => {\r\n\r\n    // defaults\r\n    const textObjectOptions = {\r\n        fontSize: 32,\r\n        color: \"#ffffff\",\r\n        boderColor: \"#000000\",\r\n        borderWidth: 3,\r\n        wordWrap: true,\r\n        x: 0,\r\n        y: 0,\r\n        flipVertical: false,\r\n        flipHorizontal: false,\r\n        rotation: 0,\r\n        ...object,\r\n        id: uuid(),\r\n        type: DISPLAY_OBJECT_TYPES.TEXT_OBJECT\r\n    }\r\n\r\n    \r\n\r\n    return textObjectOptions as TextCanvasObject;\r\n}\r\n\r\nexport const createImageCanvasObject = (object:any): ImageCanvasObject => {\r\n\r\n    // defaults\r\n    const textObjectOptions = {\r\n        width: 100,\r\n        height: 100,\r\n        flipVertical: false,\r\n        flipHorizontal: false,\r\n        image: \"\",\r\n        x: 0,\r\n        y: 0,\r\n        rotation: 0,\r\n        ...object,    \r\n        id: uuid(),\r\n        type: DISPLAY_OBJECT_TYPES.IMAGE_OBJECT,\r\n    }\r\n\r\n    return textObjectOptions as ImageCanvasObject;\r\n}","import types from \"./canvasObjects.types\"\r\nimport {CanvasObject, TextCanvasObject} from \"../../types/canvasObjects.types\"\r\nimport {createTextCanvasObject, createImageCanvasObject} from \"../../pixijs/pixijs.utils\"\r\nimport {createDisplayObject} from \"../../pixijs/App\"\r\nimport store, {AppDispatch, RootState} from \"../store\"\r\n\r\nexport const createCanvasObject = (canvasObject: CanvasObject) => {\r\n    return {\r\n        type: types.CREATE_CANVAS_OBJECT,\r\n        canvasObject\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createCanvasText= (options: any) => async (dispatch:AppDispatch) => {\r\n    const canvasTextOptions = createTextCanvasObject(options)\r\n    const canvasText = await createDisplayObject(canvasTextOptions)\r\n\r\n\r\n    console.log(\"create text\")\r\n    console.log(canvasText)\r\n    \r\n        \r\n\r\n    // get width & height\r\n    canvasTextOptions.width = canvasText?.getWidth() || 100;\r\n    canvasTextOptions.height = canvasText?.getHeight() || 100; \r\n\r\n    console.log(\"canvasText width\")\r\n    console.log(canvasText?.getWidth())\r\n \r\n\r\n    dispatch(createCanvasObject(canvasTextOptions))\r\n}\r\n\r\n\r\ninterface Dimension {\r\n    width: number,\r\n    height: number\r\n}\r\n\r\n\r\nconst limitWithFixedRatio = (dimensions:Dimension, maxDimensions: Dimension) => {\r\n    let width = dimensions.width;\r\n    let height = dimensions.height;\r\n    if(width > maxDimensions.width){\r\n        height = (maxDimensions.width / width) * height;\r\n        width = maxDimensions.width; \r\n    }\r\n\r\n    if(height > maxDimensions.height){\r\n        width = (maxDimensions.height / height) * width;\r\n        height = maxDimensions.height; \r\n    }\r\n\r\n    return {\r\n        width, \r\n        height\r\n    }\r\n}\r\n\r\nexport const createCanvasImage = (options: any) => async (dispatch:AppDispatch) => {\r\n    const canvasImageOptions = createImageCanvasObject(options)\r\n    const canvasImage = await createDisplayObject(canvasImageOptions)\r\n\r\n\r\n    const imageWidth = canvasImage?.getWidth() || 100;\r\n    const imageHeight = canvasImage?.getHeight() ||   100; \r\n\r\n    // scale image down?\r\n    const state = store.getState();\r\n    const maxDimensions = state.canvas.dimensions;\r\n    const {width, height} = limitWithFixedRatio({width: imageWidth, height: imageHeight},{width: maxDimensions.width /2, height: maxDimensions.height/2})\r\n\r\n    console.log(width, height)\r\n\r\n    canvasImageOptions.width = width;\r\n    canvasImageOptions.height = height\r\n\r\n    dispatch(createCanvasObject(canvasImageOptions))\r\n}\r\n\r\nexport const deleteCanvasObject = (id: string) => {\r\n    return {\r\n        type: types.DELETE_CANVAS_OBJECT,\r\n        payload: id,\r\n    }\r\n}\r\n\r\nexport const setActiveObject = (id: string) => {\r\n    return {\r\n        type: types.SET_ACTIVE_OBJECT,\r\n        id,\r\n    }\r\n}\r\n\r\nexport const updateCanvasObject = (id: string, canvasObject: any) => {\r\n    return {\r\n        type: types.UPDATE_CANVAS_OBJECT,\r\n        id,\r\n        canvasObject,\r\n    }\r\n}\r\n\r\n","\r\n\r\nimport { type } from \"os\"\r\nimport types from \"./canvas.types\"\r\n\r\n\r\nexport const setCanvasDimensions = (width: number, height:number) => ({\r\n    type: types.SET_CANVAS_DIMENSIONS,\r\n    payload: {\r\n        width,\r\n        height\r\n    }\r\n})\r\n\r\nexport const triggerRerender = () => ({\r\n    type: types.TRIGGER_RERENDER,\r\n})\r\n\r\nexport const setCanvasMaxDimensions = (width: number, height:number) => ({\r\n    type: types.SET_CANVAS_MAX_DIMENSIONS,\r\n    payload: {\r\n        width,\r\n        height\r\n    }\r\n})\r\n\r\nexport const setCanvasBackgroundImage = (image: string, width: number, height:number) => ({\r\n    type: types.SET_BACKGROUND_IMAGE,\r\n    payload: {\r\n        image,\r\n        width,\r\n        height\r\n    }\r\n})\r\n\r\nexport const clearCanvasBackground = () => ({\r\n    type: types.CLEAR_CANVAS,\r\n})\r\n\r\nexport const setShowImageOverlay = (show:boolean) => ({\r\n    type: types.SET_SHOW_IMAGE_OVERLAY,\r\n    payload: show\r\n})\r\n\r\n","export const loadImage = async (image: any): Promise<HTMLImageElement> => {\r\n    return new Promise((resolve, reject) => {\r\n        let img = new Image()\r\n        img.onload = () => resolve(img)\r\n        img.onerror = reject\r\n        img.src  =  URL.createObjectURL(image)    \r\n    })\r\n}\r\n\r\n\r\nexport const loadImageFromURL = async (imageURL: string):Promise<HTMLImageElement> => {\r\n    return new Promise((resolve, reject) => {\r\n        let img = new Image()\r\n        img.onload = () => resolve(img)\r\n        img.onerror = reject\r\n        img.src  =  imageURL  \r\n    })\r\n}\r\n\r\n\r\nexport const canvasToBlob = async (canvas: HTMLCanvasElement) => {\r\n    return new Promise((resolve, reject) => {\r\n        canvas.toBlob((blob) => {\r\n            resolve(blob)\r\n        })\r\n    })\r\n}\r\n","import React from 'react'\r\nimport \"../styles/components/input.styles.scss\"\r\n\r\n\r\ninterface Props {\r\n    label?: string,\r\n    suffix?: string,\r\n    disabled?: boolean,\r\n    value?: any,\r\n    onChange?:any,\r\n    name?: string,\r\n    type?: string,\r\n}\r\n\r\nconst Input = ({label, suffix, disabled, ...props}:Props) => {\r\n    return (\r\n        <div className=\"input\">\r\n            <label className=\"input__label\">{label}</label>\r\n            <input className=\"input__input\" disabled={disabled} {...props} />\r\n            <div className=\"input__type\">{suffix}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React, {useState} from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport {RootState} from \"../redux/store\"\r\n\r\nconst useCanvasLimiter = () => {\r\n    const {width: maxWidth,height:maxHeight} = useSelector((state:RootState) => state.canvas.maxDimensions)\r\n    \r\n    // return maxWidht,maxHeight, size \r\n\r\n    // independent \r\n    const limit = (width: number, height: number) => {\r\n\r\n        console.log(maxWidth, maxHeight)\r\n        // check width\r\n        if(width > maxWidth){\r\n            height = (maxWidth / width) * height;\r\n            width = maxWidth;          \r\n        }\r\n       \r\n        // check height\r\n        if(height > maxHeight){\r\n            console.log(\"fix height\")\r\n            width = (maxHeight / height) * width;\r\n            height = maxHeight;\r\n        }\r\n\r\n        return {\r\n            width: Math.round(width),\r\n            height: Math.round(height)\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return {limit, maxWidth, maxHeight}\r\n}\r\nexport default useCanvasLimiter;","import React from 'react'\r\nimport Input from \"./Input.component\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport \"../styles/components/canvasBackgroundSettings.styles.scss\";\r\nimport {setCanvasDimensions, clearCanvasBackground, setCanvasBackgroundImage} from \"../redux/canvas/canavs.actions\"\r\nimport { RootState } from \"../redux/store\"\r\nimport {loadImage} from \"../utils/image.utils\"\r\nimport useCanvasLimiter from '../hooks/useCanvasLimiter';\r\n\r\nconst CanvasBackgroundSettings = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {limit, maxWidth, maxHeight} = useCanvasLimiter()\r\n    const { width, height } = useSelector((state: RootState) => state.canvas.dimensions)\r\n    const backgroundImage = useSelector((state: RootState) => state.canvas.backgroundImage)\r\n\r\n    const onWidthChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const newWidth = parseInt(target.value);\r\n        dispatch(setCanvasDimensions(newWidth, height))\r\n    }\r\n\r\n    const onHeightChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const newHeight = parseInt(target.value);\r\n        dispatch(setCanvasDimensions(width, newHeight))\r\n    }\r\n\r\n    const onClearCanvas = () => {\r\n        dispatch(clearCanvasBackground())\r\n    }\r\n\r\n    const onImageChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        console.log(\"load image\")\r\n        const target = e.target as HTMLInputElement;\r\n        if(target && target.files){\r\n            const loadedImage = await loadImage(target.files[0]);\r\n            const {width, height} = limit(loadedImage.width, loadedImage.height);\r\n            dispatch(setCanvasBackgroundImage(loadedImage.src, width, height))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"canvas-settings\">\r\n            <div className={`canvas-settings__img-container ${backgroundImage ? \"\": \"canvas-settings__img-container--clear\"}`}>\r\n                <img src={backgroundImage}/>\r\n            </div>\r\n\r\n            <div className=\"canvas-settings__controlls\">\r\n                <div className=\"canvas-settings__dimensions\">\r\n                    <Input suffix=\"px\" label=\"width\" value={width} onChange={onWidthChange} disabled={!!backgroundImage}/>\r\n                    <Input suffix=\"px\" label=\"height\" value={height} onChange={onHeightChange} disabled={!!backgroundImage}/>\r\n                </div>\r\n                <div className=\"canvas-settings__buttons\">\r\n                    \r\n                    <label className=\"canvas-settings__image-input\">\r\n                        Custom Image\r\n                        <input type=\"file\" accept=\"image/*\"  name=\"image\"  onChange={onImageChange}/>\r\n                    </label>\r\n                    <button className=\"canvas-settings__button\" onClick={onClearCanvas}>Clear Backgorund</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasBackgroundSettings","\r\nconst MEME_TEMPLATES_PATH = process.env.PUBLIC_URL + \"/meme_templates/\";\r\n\r\n\r\nexport interface MemeTemplate {\r\n    name: string,\r\n    path: string\r\n}\r\n\r\n\r\nexport const MEME_TEMPLATES: MemeTemplate[] = [\r\n    {\r\n        name: \"\",\r\n        path: \"TwoButtons.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"ChangeMyMind.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"DistractedBoyfriend.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"BatmanSlappingRobin.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"BernieSupport.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"BikeFall.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"BuffDogeVS.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"Draw25.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"EpicHandshaker.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"ExpandingBrain.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"GrusPlan.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"IsThisAPigeon.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"LeftExitOffRamp.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"MockingSpongebob.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"OneDoesNotSimply.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"RunningAwayBalloon.png\"\r\n    },\r\n    {\r\n        name: \"\",\r\n        path: \"SadPabloEscobar.png\"\r\n    },\r\n]\r\n\r\n\r\nexport const getTemplatePath = (template: MemeTemplate) => {\r\n    return MEME_TEMPLATES_PATH + template.path \r\n}","import React, {useRef, useState, useEffect} from 'react'\r\nimport { MEME_TEMPLATES, getTemplatePath, MemeTemplate } from \"../data/templates\"\r\nimport \"../styles/components/canvasTemplateList.styles.scss\"\r\nimport {loadImageFromURL} from \"../utils/image.utils\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setCanvasDimensions, setCanvasBackgroundImage, setShowImageOverlay} from \"../redux/canvas/canavs.actions\"\r\nimport useCanvasLimiter from '../hooks/useCanvasLimiter';\r\n\r\n\r\n\r\nconst CanvasTemplateList = () => {\r\n    const dispatch = useDispatch()\r\n    const templateContainer = useRef<HTMLDivElement>(null)\r\n    const {limit, maxWidth, maxHeight} = useCanvasLimiter()\r\n\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n    const [currPage, setCurrPage] = useState(0)\r\n    const [itemsPerPage, setItemsPerPage] = useState(14)\r\n\r\n    const [pageCount, setPageCount] = useState(1)\r\n\r\n\r\n    const [pageItems, setPageItems] = useState<MemeTemplate[]>([])\r\n    // items per page\r\n    // current page \r\n    // search term\r\n\r\n    // () => update \r\n\r\n    const updatePageItems = () => {\r\n        const filteredTempaltes = searchTemplates(searchTerm)\r\n        setPageCount(Math.ceil(filteredTempaltes.length / itemsPerPage))\r\n        const pageItems = getPageItems(filteredTempaltes, currPage, itemsPerPage)\r\n        console.log(pageItems)\r\n        setPageItems(pageItems)\r\n    }\r\n\r\n    useEffect(() => {\r\n       updatePageItems()\r\n    }, [searchTerm, currPage, itemsPerPage])\r\n\r\n   \r\n\r\n\r\n    const getPageItems = (items: MemeTemplate[], page: number, itemsPerPage: number) => {\r\n        const start = page * itemsPerPage;\r\n        const end = (page + 1) * itemsPerPage;\r\n\r\n        return items.slice(start, end > items.length ? items.length : end);\r\n    }\r\n\r\n    const searchTemplates = (searchTerm: string) => {\r\n        if(searchTerm === \"\") return MEME_TEMPLATES;\r\n        return MEME_TEMPLATES.filter((template) => {\r\n            const smallSearch = searchTerm.toLowerCase();\r\n            return template.name.toLowerCase().includes(smallSearch) || template.path.toLowerCase().includes(smallSearch)\r\n        })\r\n    }\r\n\r\n\r\n    const onTemplateClick = async (templatePath: string) => {\r\n  \r\n        const image = await loadImageFromURL(templatePath);\r\n    \r\n        const {width, height} = limit(image.width, image.height);\r\n        dispatch(setCanvasBackgroundImage(templatePath, width, height))\r\n    }\r\n\r\n    const onSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {value} = e.target as HTMLInputElement;\r\n        setSearchTerm(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"template-list\">\r\n            <div className=\"template-list__search-container\">\r\n                <input className=\"template-list__search\" placeholder=\"search...\" value={searchTerm} onChange={onSearch}/>\r\n            </div>\r\n\r\n            <div className=\"template-list__items\" ref={templateContainer}>\r\n                {pageItems.length > 0 ? pageItems.map(template => {\r\n                    \r\n\r\n                    return <CanvasTemplateListItem \r\n                        key={template.path}\r\n                        template={template}\r\n                        onClick={onTemplateClick}\r\n                    />    \r\n                })\r\n                :\r\n                (\r\n                    <div className=\"template-list__message\">\r\n                        No templates found\r\n                    </div>\r\n                )\r\n               \r\n            }\r\n            </div>\r\n\r\n            <div className=\"template-list__pagination\">\r\n                {[...new Array(pageCount)].map((_, idx) => {\r\n                    return (\r\n                        <div \r\n                            className={`template-list__page-icon ${idx == currPage ? \"template-list__page-icon--active\" : \"\"}`} \r\n                            key={`page-${idx}`}\r\n                            onClick={() => setCurrPage(idx)}\r\n                            >\r\n                            <span>{idx +1}</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface ListItemProps {\r\n    template: MemeTemplate\r\n    onClick: any,\r\n}\r\n\r\nconst CanvasTemplateListItem = ({template, onClick}: ListItemProps) => {\r\n\r\n    const templatePath = getTemplatePath(template)\r\n    return (\r\n        <div \r\n            className=\"template-list__item\"\r\n            style={{ backgroundImage: `url('${templatePath}')` }} title={template.name || template.path}\r\n            onClick={() => onClick(templatePath)}\r\n        ></div>\r\n    )\r\n}\r\n\r\nexport default CanvasTemplateList","import React from 'react'\r\nimport { FaTimes } from \"react-icons/fa\"\r\nimport \"../styles/components/canvasEditorOverlay.styles.scss\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {setShowImageOverlay} from \"../redux/canvas/canavs.actions\"\r\nimport { RootState } from \"../redux/store\"\r\nimport CanvasBackgroundSettings from \"./CanvasBackgroundSettings.component\"\r\nimport CanvasTemplateList from \"./CanvasTemplateList.component\"\r\n\r\n\r\n/*\r\n    - remove background (if background)\r\n    - add/change background ()\r\n\r\n    - paginated template list\r\n*/\r\n\r\n\r\nconst CanvasEditorOverlay = () => {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const show = useSelector((state:RootState) => state.canvas.showChoseBackgroundOverlay)\r\n    console.log(show)\r\n\r\n\r\n\r\n    const onClose = () => {\r\n        dispatch(setShowImageOverlay(false))\r\n    }\r\n\r\n    return (\r\n        <div className={`canvas-editor ${show ? \"\" : \"canvas-editor--closed\"}`}>\r\n            <div className=\"canvas-editor__container\">\r\n                <header className=\"canvas-editor__header\">\r\n                    <h3>Canvas Settings</h3>\r\n                  \r\n                    <button className=\"canvas-editor__close\" onClick={onClose}>\r\n                        <FaTimes />\r\n                    </button>\r\n                </header>\r\n\r\n                <div className=\"canvas-editor__body\">\r\n                    <CanvasBackgroundSettings />\r\n                    <CanvasTemplateList />\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasEditorOverlay;","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport \"../styles/components/activeObjectMainpulator.styles.scss\";\r\nimport { updateCanvasObject } from \"../redux/canvasObjects/canvasObjects.actions\"\r\nimport { RootState } from \"../redux/store\"\r\nimport { getLineAndCharacterOfPosition } from 'typescript';\r\nimport {DISPLAY_OBJECT_TYPES} from \"../pixijs/App\"\r\n\r\n\r\ninterface Props {\r\n    container: React.MutableRefObject<HTMLDivElement> | null\r\n}\r\n\r\n\r\nconst PADDING = 20;\r\n\r\nconst HANDLE_SIZE = 14;\r\n\r\nconst ActiveObjectManipulator = ({ container }: Props) => {\r\n    const dispatch = useDispatch()\r\n    const [dragging, setDragging] = useState(false)\r\n    const [startCoords, setStartCoords] = useState({\r\n        x: 0,\r\n        y: 0,\r\n    })\r\n    const activeObject: any = useSelector((state: RootState) => state.canvasObjects.activeObject)\r\n    const objects: Record<string, any> = useSelector((state: RootState) => state.canvasObjects.objects)\r\n    const activeObj = activeObject && activeObject in objects ? objects[activeObject] : null;\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousemove\", onMouseMove, false);\r\n        return () => document.removeEventListener(\"mousemove\", onMouseMove, false);\r\n    }, [dragging, container, activeObj]);\r\n\r\n    const clamp = (num: number, min: number, max: number): number => Math.min(Math.max(num, min), max)\r\n\r\n    const onMouseMove = (e: MouseEvent) => {\r\n\r\n        if (dragging && container) {\r\n            const bounds = container.current.getBoundingClientRect();\r\n\r\n            const correctedX = e.clientX - bounds.x - startCoords.x;\r\n            const correctedY = e.clientY - bounds.y - startCoords.y;\r\n\r\n            const clampedX = clamp(correctedX, 0 , bounds.width );\r\n            const clampedY = clamp(correctedY, 0 , bounds.height );\r\n\r\n            dispatch(updateCanvasObject(activeObject, {\r\n                x: clampedX,\r\n                y: clampedY,\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onDragStart = (e: React.MouseEvent) => {\r\n        if (container) {\r\n            const bounds = container.current.getBoundingClientRect();\r\n\r\n            const xOffset = e.clientX - bounds.x - activeObj.x;\r\n            const yOffset = e.clientY - bounds.y - activeObj.y;\r\n            setStartCoords({\r\n                x: xOffset,\r\n                y: yOffset\r\n            })\r\n            setDragging(true)\r\n        }\r\n    }\r\n\r\n    const onDragFinish = () => {\r\n        setDragging(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"active-object\" style={{\r\n            display: activeObj ? \"block\" : \"none\",\r\n            top: activeObject ? `${activeObj.y - (PADDING / 2) - activeObj.height / 2}px` : 0,\r\n            left: activeObject ? `${activeObj.x - (PADDING / 2) - activeObj.width / 2}px` : 0,\r\n            width: activeObj ? `${activeObj.width + PADDING}px` : 100,\r\n            height: activeObj ? `${activeObj.height + PADDING}px` : 100,\r\n            transformOrigin: \"center center\",\r\n            transform: `rotate(${activeObj?.rotation || 0}rad)`\r\n        }}\r\n\r\n        >\r\n\r\n            <div className=\"active-object__content\"\r\n                onPointerDown={onDragStart}\r\n                onPointerUp={onDragFinish}\r\n            ></div>\r\n\r\n\r\n            <DragHandle x={0} y={0} size={HANDLE_SIZE} cursor=\"nw-resize\" container={container} activeObject={activeObj} />\r\n            <DragHandle x={.5} y={0} size={HANDLE_SIZE} cursor=\"n-resize\" container={container} activeObject={activeObj} />\r\n            <DragHandle x={1} y={0} size={HANDLE_SIZE} cursor=\"ne-resize\" container={container} activeObject={activeObj} />\r\n            <DragHandle x={1} y={.5} size={HANDLE_SIZE} cursor=\"e-resize\" container={container} activeObject={activeObj} />\r\n            <DragHandle x={1} y={1} size={HANDLE_SIZE} cursor=\"se-resize\" container={container} activeObject={activeObj} />\r\n            <DragHandle x={.5} y={1} size={HANDLE_SIZE} cursor=\"s-resize\" container={container} activeObject={activeObj} />\r\n            <DragHandle x={0} y={1} size={HANDLE_SIZE} cursor=\"sw-resize\" container={container} activeObject={activeObj} />\r\n            <DragHandle x={0} y={.5} size={HANDLE_SIZE} cursor=\"w-resize\" container={container} activeObject={activeObj} />\r\n\r\n\r\n            <RotationHandle activeObject={activeObj} container={container}/>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ninterface RotationHandleProps {\r\n    container: React.MutableRefObject<HTMLDivElement> | null,\r\n    activeObject: any\r\n}\r\n\r\n\r\nconst RotationHandle = ({activeObject, container}: RotationHandleProps) => {\r\n    const dispatch = useDispatch()\r\n    const [dragging, setDragging] = useState(false)\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousemove\", onMouseMove, false);\r\n        return () => document.removeEventListener(\"mousemove\", onMouseMove, false);\r\n    }, [dragging]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mouseup\", dragEnd, false);\r\n        return () => document.removeEventListener(\"mouseup\", dragEnd, false);\r\n    }, [dragging]);\r\n\r\n\r\n    const onMouseMove = (e: MouseEvent) => {\r\n        if(dragging && container){\r\n            // mouse pos\r\n            const bounds = container.current.getBoundingClientRect();\r\n            const mouseX = e.clientX - bounds.x;\r\n            const mouseY = e.clientY - bounds.y;\r\n\r\n            //const rad = Math.atan2( activeObject.y - mouseY,  activeObject.x - mouseX)\r\n            const rad = Math.atan2(  mouseY - activeObject.y, mouseX - activeObject.x) + Math.PI / 2 \r\n\r\n           dispatch(updateCanvasObject(activeObject.id, {\r\n               rotation: rad\r\n           }))\r\n        }\r\n    }\r\n    \r\n    const onDragStart = () => {\r\n        setDragging(true)\r\n        document.body.style.cursor = \"grabbing\" \r\n    }\r\n\r\n    const dragEnd = () => {\r\n        setDragging(false)\r\n        document.body.style.cursor = \"default\" \r\n    }\r\n\r\n    return (\r\n        <div \r\n        className=\"active-object__rotation-handle\"\r\n        onPointerDown={onDragStart} \r\n        style={{\r\n            backgroundColor: dragging ? \"red\" : \"#fff\"\r\n        }}\r\n         ></div>\r\n    )\r\n}\r\n\r\ninterface DragHandleProps {\r\n    x: number,\r\n    y: number,\r\n    cursor?: string,\r\n    size: number,\r\n    container: React.MutableRefObject<HTMLDivElement> | null,\r\n    activeObject: any\r\n}\r\n\r\n\r\n\r\nconst DragHandle = ({ x, y, cursor, size, container, activeObject }: DragHandleProps) => {\r\n    const [dragging, setDragging] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const onDragStart = () => {\r\n        setDragging(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousemove\", onMouseMove, false);\r\n        return () => document.removeEventListener(\"mousemove\", onMouseMove, false);\r\n    }, [dragging]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mouseup\", dragEnd, false);\r\n        return () => document.removeEventListener(\"mouseup\", dragEnd, false);\r\n    }, [dragging]);\r\n\r\n    const dragEnd = () => {\r\n        setDragging(false)\r\n    }\r\n\r\n    const onMouseMove = (e: MouseEvent) => {\r\n        if (dragging && container) {\r\n\r\n            // mouse pos\r\n            const bounds = container.current.getBoundingClientRect();\r\n            const mouseX = e.clientX - bounds.x;\r\n            const mouseY = e.clientY - bounds.y;\r\n\r\n            // rect point\r\n            const dragX = activeObject.x + activeObject.width * x;\r\n            const dragY = activeObject.y + activeObject.height * y;\r\n\r\n            // anchor point\r\n            const anchorX = activeObject.x  - activeObject.width / 2 + activeObject.width * (1 - x)\r\n            const anchorY = activeObject.y - activeObject.height / 2 + activeObject.height * (1 - y)\r\n\r\n            // \r\n\r\n            // y = 0 => -1 * 100 + 200 => 100\r\n            const m = (num: number) => num == 1 ? 1 : -1;\r\n\r\n            // todo: calculate widht based on height to lock sides\r\n            const newHeight = y !== .5 ? Math.max(m(y) * mouseY - m(y) * anchorY, 30) : activeObject.height;\r\n\r\n            // resize function for open resize\r\n            const freeNewWidth = x !== .5 ? Math.max(m(x) * mouseX - m(x) * anchorX, 30) : activeObject.width;\r\n\r\n            // (newHeight / activeObject.height) activeObject.width \r\n            const lockedNewWidth = x !== .5 ? (newHeight / activeObject.height) * activeObject.width: activeObject.width;\r\n\r\n            let newWidth = y == .5 ? freeNewWidth : lockedNewWidth;\r\n            if(activeObject.type == DISPLAY_OBJECT_TYPES.TEXT_OBJECT) newWidth = freeNewWidth;\r\n\r\n\r\n            console.log(anchorX, anchorY)\r\n            const newY = y !== .5 ? anchorY + m(y) * newHeight/2 : activeObject.y;\r\n            const newX = x !== .5 ? anchorX + m(x) * newWidth /2: activeObject.x;\r\n\r\n            dispatch(updateCanvasObject(activeObject.id, {\r\n                x: newX,\r\n                y: newY,\r\n                width: newWidth,\r\n                height: newHeight,\r\n            }))\r\n        }\r\n    }\r\n\r\n\r\n    const offset = (-size / 2) - 1;\r\n\r\n    return (\r\n        <div className=\"active-object__handle\"\r\n            onPointerDown={onDragStart}\r\n            style={{\r\n                width: size,\r\n                height: size,\r\n                cursor: cursor ? cursor : \"pointer\",\r\n                top: y == 0 ? offset : y == .5 ? `50%` : undefined,\r\n                left: x == 0 ? offset : x == .5 ? `50%` : undefined,\r\n                bottom: y == 1 ? offset : undefined,\r\n                right: x == 1 ? offset : undefined,\r\n                transform: x === .5 ? `translate(-50%, 0)` : y === .5 ? 'translate(0,-50%)' : undefined\r\n            }}\r\n        ></div>\r\n    )\r\n}\r\n\r\nexport default ActiveObjectManipulator;\r\n\r\n\r\n/*\r\n\r\ntop-right: scale width & height + update y\r\ntop-left: scale widht & height + update y + x\r\n\r\nfixpoint (top-right => bottom-left) => {100, 100}\r\n\r\nfixpoint + point => line\r\n\r\ndragpoint => mouse => closeset to line (orthogonale)\r\n\r\n\r\n\r\n- dragpoint\r\n- anchor point (opposite of dragpoint)\r\n- mouse position ()\r\n- line point (closest to mouse position)\r\n\r\n- clamp minsize (width,height) => 20, 20\r\n\r\n\r\n- dragpoint (0, .5)\r\n- oppositie (0, .5) => (1 - 0), 1 - .5) => 1 .5\r\n\r\n\r\n\r\n=> calc widht , height (distance line point => anchor point)\r\n=> clamp minsize (20,20???)\r\n=> calc x,y =>\r\n    - .5 => keep\r\n    - 0 => -y - x\r\n    - 1 => keep\r\n\r\n\r\n<DragHandle x=1 y=1 />\r\n\r\n*/","import React, {useEffect, useRef, useLayoutEffect} from 'react'\r\nimport ActiveObjectManipulator from './ActiveObjectManipulator.component';\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {init} from \"../pixijs/App\"\r\nimport {setCanvasDimensions, setCanvasMaxDimensions, triggerRerender} from \"../redux/canvas/canavs.actions\"\r\n\r\nimport {RootState} from \"../redux/store\"\r\nimport \"../styles/components/canvasArea.styles.scss\";\r\n\r\nconst CanvasArea = () => {\r\n    const dispatch = useDispatch()\r\n    const canvasContainer = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n    const canvasArea = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\r\n    const {width, height } = useSelector((state: RootState) => state.canvas.dimensions)\r\n    const maxDimensions = useSelector((state: RootState) => state.canvas.maxDimensions)\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            const bounds = canvasArea.current.getBoundingClientRect()\r\n            dispatch(setCanvasMaxDimensions(Math.round(bounds.width), Math.round(bounds.height)));\r\n            \r\n        }\r\n        window.addEventListener('resize', updateSize);\r\n       \r\n        updateSize();\r\n        return () => window.removeEventListener('resize', updateSize);\r\n      }, [dispatch]);\r\n    \r\n\r\n    useEffect(() => {\r\n        init(canvasContainer.current);\r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <div ref={canvasArea} className=\"canvas-area\" >\r\n            <div ref={canvasContainer}  className=\"canvas-area__canvas\" style={{width, height}}>\r\n                <ActiveObjectManipulator container={canvasContainer}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasArea;","import React from 'react'\r\nimport { isPropertySignature } from 'typescript'\r\nimport \"../styles/components/rainbowButton.styles.scss\";\r\n\r\ninterface Props {\r\n    className?: string,\r\n    onClick?: any\r\n    children?: React.ReactNode,\r\n    disabled?:boolean,\r\n}\r\n\r\n\r\nconst RainbowButton = ({children, className, onClick, disabled}: Props) => {\r\n    return (\r\n        <button className={`rainbow-button ${className}`} onClick={onClick} disabled={disabled}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default RainbowButton","import React, { useState } from 'react'\r\nimport \"../styles/components/canvasTextCreator.styles.scss\";\r\nimport RainbowButton from \"./RainbowButton.component\"\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { createCanvasText } from \"../redux/canvasObjects/canvasObjects.actions\"\r\nimport { RootState } from '../redux/store';\r\n\r\nconst CanvasTextCreator = () => {\r\n    const dispatch = useDispatch()\r\n    const dimensions = useSelector((state: RootState) => state.canvas.dimensions)\r\n    const [text, setText] = useState(\"\")\r\n    \r\n\r\n    const createText = () => {\r\n        dispatch(createCanvasText({\r\n            text,\r\n            x: Math.round(dimensions.width / 2),\r\n            y: Math.round(dimensions.height / 2),\r\n        }))\r\n    }\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newText = e.target.value;\r\n        setText(newText)\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-creator\">\r\n\r\n            <div className=\"text-creator__input-container\">\r\n                <textarea className=\"text-creator__input\" value={text} onChange={onChange} placeholder=\"Write Text...\"/>\r\n            </div>\r\n\r\n\r\n            <RainbowButton className=\"rainbow-button--fullsize mt\" onClick={createText} disabled={!text}>\r\n                Add Text\r\n            </RainbowButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasTextCreator","import React, {useState, useEffect, useRef} from \"react\"\r\n\r\nimport * as tfjs from '@tensorflow/tfjs';\r\nimport * as bodyPix from \"@tensorflow-models/body-pix\"\r\nimport * as blazeface from \"@tensorflow-models/blazeface\"\r\nimport * as tfjsWasm from '@tensorflow/tfjs-backend-wasm';\r\nimport {canvasToBlob} from \"../utils/image.utils\"\r\nimport '@tensorflow/tfjs-backend-webgl';\r\nimport '@tensorflow/tfjs-backend-cpu';\r\n\r\nlet blazefaceModel: any = null;\r\nlet bodyPixModel: any = null;\r\n\r\n\r\ninterface Status {\r\n    message: string,\r\n    time: Date | null,\r\n    isLoading: boolean\r\n}\r\n\r\ninterface CustomBlob extends Blob{\r\n    width?: number,\r\n    height?: number,\r\n    name?: string,\r\n}\r\n\r\nconst useFaceExtractor = () => {\r\n    const canvasRef = useRef<HTMLCanvasElement>(null)\r\n    const [extractedFaces, setExtractedFaces] = useState<CustomBlob[]>([])\r\n\r\n    const [status, setStatus] = useState<Status>({\r\n        message: \"\",\r\n        time: null,\r\n        isLoading: false\r\n    })\r\n\r\n\r\n    const loadModels = async () => {\r\n        // load async ??? sepertly ???\r\n        setStatusMessage(\"loading models\")\r\n        console.log(\"loading models...\")\r\n        if(!blazefaceModel) blazefaceModel = await blazeface.load();\r\n        if(!bodyPixModel) bodyPixModel = await bodyPix.load({         \r\n            architecture: 'MobileNetV1',\r\n            outputStride: 8,\r\n            quantBytes: 4\r\n        });\r\n    \r\n    }\r\n\r\n    const setStatusMessage = (message: string, isLoading=true) => {\r\n        setStatus({\r\n            message,\r\n            time: isLoading ? new Date() : null,\r\n            isLoading: isLoading\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const extractFaces = async (image: HTMLImageElement) => {\r\n        // check if loading\r\n        await loadModels()\r\n        // extract faces\r\n        const faces = await extractFaceFromImage(image)\r\n        setExtractedFaces(faces)\r\n        const message = faces.length > 0 ? \"Extracted Faces\" : \"No Faces Found\";\r\n        setStatusMessage(message, false)\r\n    }\r\n\r\n    const extractFaceFromImage = async (image: HTMLImageElement): Promise<CustomBlob[]> => {\r\n        if(!canvasRef.current) return [];\r\n        console.log(\"extract Faces\")\r\n        setStatusMessage(\"searching for faces\")\r\n        const predictedFaceDimensions = await predictFaces(image)\r\n\r\n        \r\n        console.log(predictedFaceDimensions)\r\n\r\n        const faceImages = []\r\n        for(let i = 0; i < predictedFaceDimensions.length; i++){\r\n\r\n        \r\n            setStatusMessage(`extracting face ${i+1}`)\r\n            // crop image\r\n            await cropFace(canvasRef.current, image, predictedFaceDimensions[i])\r\n            \r\n            // remove background\r\n            await segmentFace(canvasRef.current)\r\n\r\n            const faceImage = await canvasToBlob(canvasRef.current) as CustomBlob;\r\n            faceImage.name =  `${image.name.split(\".\")[0]}-f-${i}.png`;\r\n            faceImage.width =  canvasRef.current.width;\r\n            faceImage.height =   canvasRef.current.height;\r\n            faceImages.push(faceImage)\r\n        }\r\n\r\n        return faceImages;\r\n    }\r\n\r\n    const cropFace = async (canvas: HTMLCanvasElement, image:any, predictions:any) => {\r\n        canvas.width = predictions.width;\r\n        canvas.height = predictions.height;\r\n\r\n        const x = predictions.x ;\r\n        const y = predictions.y ;\r\n        const width = predictions.width;\r\n        const height = predictions.height;\r\n        \r\n        const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;   \r\n        ctx.drawImage(image, x,y , width, height, 0, 0, canvas.width,  canvas.height)\r\n    }\r\n\r\n    const predictFaces = async (image: any) => {\r\n        const returnTensors = false; // Pass in `true` to get tensors back, rather than values.\r\n        const predictions = await blazefaceModel.estimateFaces(image, returnTensors);\r\n\r\n        const predictionDimensions = []\r\n        if (predictions.length > 0) {\r\n            for (let i = 0; i < predictions.length; i++) {\r\n                const start = predictions[i].topLeft;\r\n                const end = predictions[i].bottomRight;\r\n                const size = [end[0] - start[0], end[1] - start[1]];\r\n\r\n                const startY = Math.max(start[1] - (size[1] / 1.3), 0)\r\n                const startX = Math.max(start[0] - (size[0] / 4), 0)\r\n                    \r\n                predictionDimensions.push({\r\n                    x: startX,\r\n                    y: startY,\r\n                    width:size[0] * 1.5,\r\n                    height:size[1] * 1.7,\r\n                })\r\n            }\r\n        }\r\n        return predictionDimensions;\r\n    }\r\n\r\n\r\n\r\n    const segmentFace = async (canvas: HTMLCanvasElement) => {\r\n        const { data:map } = await bodyPixModel.segmentPerson(canvas);\r\n        const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n        const { data:imgData } = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n       \r\n        const newImg = ctx.createImageData(canvas.width, canvas.height);\r\n        const newImgData = newImg.data;\r\n\r\n        for(let i=0; i<map.length; i++) {\r\n            //The data array stores four values for each pixel\r\n            const [r, g, b, a] = [imgData[i*4], imgData[i*4+1], imgData[i*4+2], imgData[i*4+3]];\r\n            [\r\n              newImgData[i*4],\r\n              newImgData[i*4+1],\r\n              newImgData[i*4+2],\r\n              newImgData[i*4+3]\r\n            ] = !map[i] ? [255, 255, 255, 0] : [r, g, b, a];\r\n        }\r\n\r\n\r\n        ctx.putImageData(newImg, 0, 0);\r\n  \r\n    }\r\n\r\n    return {\r\n        extractFaces,\r\n        extractedFaces,\r\n        canvasRef,\r\n        status,\r\n    }\r\n}\r\n\r\nexport default useFaceExtractor","import {useRef, useEffect} from \"react\"\r\n\r\nconst useInterval = (callback: () => void, delay: number) => {\r\n    const savedCallback = useRef<() => void | null>();\r\n  \r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        if(savedCallback && savedCallback.current) savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }\r\n\r\nexport default useInterval;","\r\n\r\nimport React, {useState, useEffect} from 'react'\r\nimport useInterval from \"../hooks/useInterval\"\r\ninterface Props {\r\n    className?: string,\r\n    startDate: Date | null,\r\n    \r\n}\r\n\r\nconst defaultProps = {\r\n    refreshRate: 500,\r\n\r\n}\r\n\r\nconst getCurrentDateString = (startDate: Date) => {\r\n    const delta = Math.floor((new Date().getTime() - startDate.getTime()) / 1000);\r\n\r\n    const minutes = Math.floor(delta / 60) % 60\r\n    const seconds = delta % 60; \r\n\r\n    return `${('0' + minutes).slice(-2)}:${('0' + seconds).slice(-2)}`\r\n}\r\n\r\nconst TimeSinceDisplay = ({className, startDate, refreshRate}: Props & typeof defaultProps) => {\r\n\r\n    const [timeString, setTimeString] = useState(\"00:00\");\r\n\r\n    useInterval(() => {\r\n        console.log(\"interval\")\r\n        const newTimeString = startDate ?  getCurrentDateString(startDate) : \"\"\r\n        setTimeString(newTimeString)\r\n    }, refreshRate)\r\n\r\n\r\n    return (\r\n        <div className={className}>\r\n            {timeString}\r\n        </div>\r\n    )\r\n}\r\n\r\nTimeSinceDisplay.defaultProps = defaultProps;\r\n\r\nexport default TimeSinceDisplay","import React from 'react'\r\nimport \"../styles/components/imageInput.styles.scss\"\r\nimport {FaImage} from \"react-icons/fa\"\r\n\r\ninterface Props {\r\n    image?: HTMLImageElement,\r\n    onChange?: any\r\n}\r\n\r\n\r\nconst ImageInput = ({image, onChange}: Props) => {\r\n    const src = image ? image.src : undefined;\r\n\r\n    return (\r\n        <label className=\"image-input\">\r\n            <input type=\"file\" accept=\"image/*\"   name=\"image\" className=\"image-input__input\" onChange={onChange}  />\r\n            <div className={`image-input__background ${image ? \"image-input__background--elevated\": \"\"}`}>\r\n                <div>\r\n                  Chose or drop file\r\n                </div>\r\n                <FaImage />\r\n            </div>\r\n            <img className=\"image-input__img\" src={src} />    \r\n        </label>\r\n    )\r\n}\r\n\r\nexport default ImageInput","import React, { useState, useEffect } from 'react'\r\nimport \"../styles/components/canvasImageCreator.styles.scss\";\r\nimport RainbowButton from \"./RainbowButton.component\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createCanvasImage } from \"../redux/canvasObjects/canvasObjects.actions\"\r\nimport {loadImage} from \"../utils/image.utils\"\r\nimport { RootState } from '../redux/store';\r\nimport useFaceExtractor from \"../hooks/useFaceExtractor\"\r\nimport TimeSinceDisplay from \"./TimeSinceDisplay.component\"\r\n\r\n\r\nimport ImageInput from './ImageInput.component';\r\n\r\n\r\n\r\n\r\nconst CanvasTextCreator = () => {\r\n    const dispatch = useDispatch()\r\n    \r\n    const dimensions = useSelector((state: RootState) => state.canvas.dimensions)\r\n    const [image, setImage] = useState<HTMLImageElement | undefined>(undefined)\r\n    \r\n    const {canvasRef, status, extractedFaces, extractFaces} = useFaceExtractor();\r\n\r\n\r\n   \r\n\r\n    const onImageChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        console.log(\"load image\")\r\n        const target = e.target as HTMLInputElement;\r\n        if(target && target.files){\r\n            const loadedImage = await loadImage(target.files[0]);\r\n            console.log(loadedImage)\r\n            setImage(loadedImage)\r\n        }\r\n    }\r\n\r\n\r\n \r\n \r\n    const onAddImage = async () => {\r\n        if(image){\r\n            dispatch(createCanvasImage({\r\n                src: image.src,\r\n                x: Math.round(dimensions.width / 2),\r\n                y: Math.round(dimensions.height / 2),\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onExtractFaces = async () => {\r\n        if(image){\r\n            extractFaces(image);\r\n        }\r\n    }\r\n\r\n\r\n    const onAddFaceImage = async (b: Blob, url: string) => {\r\n\r\n        dispatch(createCanvasImage({\r\n            src: url,\r\n            x: Math.round(dimensions.width / 2),\r\n            y: Math.round(dimensions.height / 2),\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"image-creator\">\r\n\r\n            <ImageInput image={image} onChange={onImageChange} />\r\n\r\n\r\n            <RainbowButton className=\"rainbow-button--fullsize mt\" onClick={onAddImage} disabled={!image}>\r\n                Add Image\r\n            </RainbowButton>\r\n\r\n            <RainbowButton className=\"rainbow-button--fullsize mt\" onClick={onExtractFaces} disabled={!image}>\r\n                Extract Faces\r\n            </RainbowButton>\r\n\r\n           \r\n\r\n            <div className=\"image-creator__face-extractor\">\r\n                <div className=\"image-creator__status\">\r\n                    \r\n                    <TimeSinceDisplay className=\"image-creator__time\" startDate={status.time}/>\r\n                    <div>{status.message}</div>\r\n                </div>\r\n                <div className=\"image-creator__face-list\">\r\n                    {extractedFaces.map((b: Blob) => {\r\n\r\n                        const url = window.URL.createObjectURL(b);\r\n\r\n                        return (\r\n                            <div className=\"image-creator__face-item\" onClick={() => onAddFaceImage(b, url)}>\r\n                               <img src={url} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            <canvas ref={canvasRef} className=\"image-creator__canvas\"></canvas>\r\n\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasTextCreator","import React, {useState} from 'react'\r\nimport \"../styles/components/canvasObjectCreator.styles.scss\";\r\n\r\nimport CanvasTextCreator from \"./CanvasTextCreator.component\"\r\nimport CanvasImageCreator from \"./CanvasImageCreator.component\"\r\n\r\nconst TABS = {\r\n    TEXT: \"Text\",\r\n    IMAGE: \"Image\"\r\n}\r\n\r\n\r\nconst CanvasObjectCreator = () => {\r\n\r\n    const [activeTab, setActiveTab] = useState(TABS.TEXT)\r\n\r\n    const renderContainer = (activeTab: string) => {\r\n        switch(activeTab){\r\n            case TABS.IMAGE:\r\n                return <CanvasImageCreator />\r\n            default:\r\n                return <CanvasTextCreator />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"object-creator\">\r\n            <header className=\"object-creator__header\">\r\n                {Object.entries(TABS).map(([key, value]) => (\r\n                    <button\r\n                        className={`object-creator__toggle-btn ${activeTab == value ? \"object-creator__toggle-btn--active\": \"\"}`}\r\n                        key={value}\r\n                        onClick={() => setActiveTab(value)}\r\n                    >\r\n                        {value}\r\n                    </button>   \r\n                ))}\r\n\r\n                \r\n            </header>\r\n            <div  className=\"object-creator__container\">\r\n                {renderContainer(activeTab)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasObjectCreator","import React from 'react'\r\nimport RainbowButton from './RainbowButton.component'\r\nimport {app} from \"../pixijs/App\"\r\n\r\nconst DownloadSection = () => {\r\n\r\n    const onDownloadClick = () => {\r\n        if(app){\r\n            console.log(app.view)\r\n\r\n           var link = document.createElement('a');\r\n            link.download = 'meme.png';\r\n           \r\n            link.href = app.view.toDataURL(\"image/png\")\r\n            link.click();\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div className=\"ui-panel p flex-center\">\r\n        <RainbowButton className=\"rainbow-button--fullsize\" onClick={onDownloadClick}>\r\n            Download\r\n        </RainbowButton>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DownloadSection","import React from 'react'\r\nimport Input from \"./Input.component\"\r\nimport { useDispatch } from 'react-redux'\r\nimport {updateCanvasObject} from \"../redux/canvasObjects/canvasObjects.actions\"\r\nimport {CanvasObject, TextCanvasObject} from \"../types/canvasObjects.types\"\r\n\r\ninterface Props {\r\n    activeObject: TextCanvasObject\r\n}\r\n\r\n\r\n\r\nconst CanvasTextEditor = ({activeObject}: Props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const onNumberChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const {name, value} = target;\r\n\r\n\r\n        const parsed = parseInt(value) ? parseInt(value) : 0;\r\n\r\n        dispatch(updateCanvasObject(activeObject.id, {\r\n            [name]: parsed\r\n        }))\r\n        \r\n    }\r\n\r\n    const onColorChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const {name, value} = target;\r\n\r\n\r\n     \r\n\r\n        dispatch(updateCanvasObject(activeObject.id, {\r\n            [name]: value\r\n        }))\r\n        \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"editor\">\r\n            <div className=\"editor__row\">\r\n                <Input label=\"x:\" suffix=\"px\" value={Math.round(activeObject.x)} name=\"x\" onChange={onNumberChange}/>\r\n                <Input label=\"y:\" suffix=\"px\" value={Math.round(activeObject.y)} name=\"y\" onChange={onNumberChange}/>\r\n            </div>\r\n\r\n            <div className=\"editor__row\">\r\n                <Input label=\"width:\" suffix=\"px\" value={Math.round(activeObject.width)} name=\"width\" onChange={onNumberChange}/>\r\n                <Input label=\"height:\" suffix=\"px\" value={Math.round(activeObject.height)} name=\"height\" onChange={onNumberChange}/>\r\n            </div>\r\n\r\n            <div className=\"editor__row\">\r\n                <Input label=\"rotation:\" suffix=\"px\" value={activeObject.rotation} name=\"rotation\" onChange={onNumberChange} type=\"number\"/>\r\n            </div>\r\n\r\n            <div className=\"editor__row\">\r\n                <Input label=\"font size:\" suffix=\"px\" value={activeObject.fontSize} name=\"fontSize\" onChange={onNumberChange} type=\"number\"/>\r\n            </div>\r\n\r\n            <div className=\"editor__row\">\r\n                <Input label=\"color:\" suffix=\"\" type=\"color\" value={activeObject.color} name=\"color\" onChange={onColorChange}/>\r\n            </div>\r\n\r\n            <div className=\"editor__row\">\r\n                <Input label=\"border color:\" suffix=\"\" type=\"color\" value={activeObject.borderColor} name=\"borderColor\" onChange={onColorChange}/>\r\n            </div>\r\n\r\n            <div className=\"editor__row\">\r\n                <Input label=\"border width:\" suffix=\"px\" value={activeObject.borderWidth} name=\"borderWidth\" onChange={onNumberChange}/>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasTextEditor","import React from 'react'\r\nimport Input from \"./Input.component\"\r\nimport { useDispatch } from 'react-redux'\r\nimport {updateCanvasObject} from \"../redux/canvasObjects/canvasObjects.actions\"\r\nimport {CanvasObject, ImageCanvasObject} from \"../types/canvasObjects.types\"\r\n\r\ninterface Props {\r\n    activeObject: ImageCanvasObject\r\n}\r\n\r\n\r\n\r\nconst CanvasImageEditor = ({activeObject}: Props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const onNumberChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const {name, value} = target;\r\n\r\n\r\n        const parsed = parseInt(value) ? parseInt(value) : 0;\r\n\r\n        dispatch(updateCanvasObject(activeObject.id, {\r\n            [name]: parsed\r\n        }))\r\n        \r\n    }\r\n\r\n    const onCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        console.log(\"flip\")\r\n        const {name, value, checked} = e.target as HTMLInputElement;\r\n       \r\n\r\n        dispatch(updateCanvasObject(activeObject.id, {\r\n            [name]: checked\r\n        }))\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"editor\">\r\n            <div className=\"editor__row\">\r\n                <Input label=\"x:\" suffix=\"px\" value={Math.round(activeObject.x)} name=\"x\" onChange={onNumberChange}/>\r\n                <Input label=\"y:\" suffix=\"px\" value={Math.round(activeObject.y)} name=\"y\" onChange={onNumberChange}/>\r\n            </div>\r\n\r\n            <div className=\"editor__row\">\r\n                <Input label=\"width:\" suffix=\"px\" value={Math.round(activeObject.width)} name=\"width\" onChange={onNumberChange}/>\r\n                <Input label=\"height:\" suffix=\"px\" value={Math.round(activeObject.height)} name=\"height\" onChange={onNumberChange}/>\r\n            </div>\r\n\r\n            <div className=\"editor__row\">\r\n                <Input label=\"rotation:\" suffix=\"px\" value={activeObject.rotation} name=\"rotation\" onChange={onNumberChange} type=\"number\"/>\r\n            </div>\r\n\r\n            <div className=\"editor__row\">\r\n                <Input label=\"flip:\" suffix=\"\" value={activeObject.flipHorizontal} name=\"flipHorizontal\" onChange={onCheckboxChange} type=\"checkbox\"/>\r\n            </div>\r\n\r\n         \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasImageEditor","import React, {useState} from \"react\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport {DISPLAY_OBJECT_TYPES} from \"../pixijs/App\"\r\nimport CanvasTextEditor from \"./CanvasTextEditor.component\"\r\nimport CanvasImageEditor from \"./CanvasImageEditor.component\"\r\n\r\nconst ActiveObjectEditor = () => {\r\n\r\n    const activeObj: any = useSelector((state: RootState) => state.canvasObjects.activeObject)\r\n    const objects: Record<string, any> = useSelector((state: RootState) => state.canvasObjects.objects)\r\n    const activeObject = activeObj && activeObj in objects ? objects[activeObj] : null;\r\n    \r\n\r\n    const renderEditor = () => {\r\n        if(!activeObj) return null;\r\n        switch(activeObject.type){\r\n            case DISPLAY_OBJECT_TYPES.IMAGE_OBJECT:\r\n                return <CanvasImageEditor activeObject={activeObject}/>\r\n            case DISPLAY_OBJECT_TYPES.TEXT_OBJECT:\r\n                return <CanvasTextEditor activeObject={activeObject}/>\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui-panel\">\r\n           {renderEditor()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveObjectEditor;","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {RootState} from \"../redux/store\"\r\nimport { CanvasObject, TextCanvasObject, ImageCanvasObject } from '../types/canvasObjects.types'\r\nimport {DISPLAY_OBJECT_TYPES} from \"../pixijs/App\"\r\nimport {FaImage, FaCommentDots, FaTrash} from \"react-icons/fa\"\r\nimport \"../styles/components/canvasObjectList.styles.scss\"\r\nimport { deleteCanvasObject, setActiveObject } from '../redux/canvasObjects/canvasObjects.actions'\r\n\r\nconst CanvasObjectList = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n    const activeObj: any = useSelector((state: RootState) => state.canvasObjects.activeObject)\r\n    const objects: Record<string, any> = useSelector((state: RootState) => state.canvasObjects.objects)\r\n    const objectsList = useSelector((state: RootState) => state.canvasObjects.objectsList)\r\n\r\n\r\n    \r\n     \r\n\r\n    return (\r\n        <div className=\"ui-panel p canvas-object-list\">\r\n            { objectsList.map(objectKey => {\r\n                const obj = objects[objectKey]\r\n                return <CanvasObjectItem item={obj} key={obj.id} isActive={activeObj === obj.id}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype C = ImageCanvasObject | TextCanvasObject\r\n\r\ninterface ObjecItemProps {\r\n    item: C,\r\n    isActive: boolean\r\n}\r\n\r\n\r\n\r\nconst CanvasObjectItem = ({item, isActive}: ObjecItemProps) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const renderIcon = () => {\r\n        switch(item.type){\r\n            case DISPLAY_OBJECT_TYPES.TEXT_OBJECT:\r\n                return <FaCommentDots />\r\n            case DISPLAY_OBJECT_TYPES.IMAGE_OBJECT:\r\n                return <FaImage />\r\n            default: \r\n                return null;\r\n        }\r\n    }\r\n\r\n\r\n    const renderItemContent = () => {\r\n        switch(item.type){\r\n            case DISPLAY_OBJECT_TYPES.TEXT_OBJECT:\r\n                const castItem = item as TextCanvasObject;\r\n                return castItem.text;\r\n            case DISPLAY_OBJECT_TYPES.IMAGE_OBJECT:\r\n               \r\n                return null\r\n            default: \r\n                return null;\r\n        }\r\n    }\r\n\r\n    const onDeleteClick = (e: React.SyntheticEvent) => {\r\n        e.stopPropagation()\r\n        dispatch(deleteCanvasObject(item.id))\r\n    }\r\n\r\n    const onItemClick = (e: React.SyntheticEvent) => {\r\n        dispatch(setActiveObject(item.id))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`canvas-item ${isActive ? 'canvas-item--active' : ''}`} onClick={onItemClick}>\r\n            <div className=\"canvas-item__icon\">\r\n                {renderIcon()}\r\n            </div>\r\n            <div className=\"canvas-item__content\">\r\n                {renderItemContent()}\r\n                \r\n            </div>\r\n            <div className=\"canvas-item__remove-btn\" onClick={onDeleteClick}>\r\n                <FaTrash />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasObjectList","import React from 'react'\r\nimport RainbowButton from './RainbowButton.component'\r\nimport { useDispatch } from 'react-redux'\r\nimport {setShowImageOverlay} from \"../redux/canvas/canavs.actions\"\r\n\r\nconst OpenCanvasEditorSection = () => {\r\n    const dispatch = useDispatch()\r\n    const onClick = () => {\r\n        dispatch(setShowImageOverlay(true))\r\n    }\r\n\r\n    return (\r\n    <div className=\"ui-panel p flex-center\">\r\n        <RainbowButton className=\"rainbow-button--fullsize\" onClick={onClick}>\r\n            Edit Background\r\n        </RainbowButton>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default OpenCanvasEditorSection","import React, {useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {createCanvasText, createCanvasObject, createCanvasImage} from \"./redux/canvasObjects/canvasObjects.actions\"\nimport {setCanvasDimensions} from \"./redux/canvas/canavs.actions\"\nimport {loadImage} from \"./utils/image.utils\"\nimport CanvasEidtorOverlay from \"./components/CanvasEditorOverlay\"\nimport Menu from \"./components/Menu.compoent\"\nimport './App.css';\nimport CanvasArea from \"./components/CanvasArea.component\"\nimport CanvasObjectCreator from \"./components/CanvasObjectCreator.component\"\nimport DownloadSection from \"./components/DownloadSection.component\"\nimport ActiveObjectEditor from \"./components/ActiveObjectEditor.component\"\nimport CanvasObjectList from \"./components/CanvasObjectList.component\"\nimport OpenCanvasEditorSection from \"./components/OpenCanvasEditor.component\"\nfunction App() {\n\n  const dispatch = useDispatch()\n\n  const [image,setImage] = useState<HTMLImageElement | null>(null)\n\n  const onCreateImage = () => {\n    if(image){\n        dispatch(createCanvasImage({\n          src: image.src,\n          x: 100,\n          y: 100,\n        }))\n    }\n   \n  }\n\n  const onCreateText = () => {\n\n        dispatch(createCanvasText({\n          text: \"Arne ist blöd\",\n          x: 100,\n          y: 100,\n        }))\n  \n   \n  }\n\n  const test = () => {\n    dispatch(setCanvasDimensions(600,400))\n  }\n\n  \n\n\n  const onChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if(e.target.files){\n      const loadedImage = await loadImage(e.target.files[0])\n      setImage(loadedImage)\n    }\n  }\n\n  return (\n    <div className=\"App layout\">\n      <CanvasEidtorOverlay />\n      <div className=\"layout__info\">\n        <OpenCanvasEditorSection />\n      </div>\n      <div className=\"layout__canvas\">\n        <CanvasArea />\n      </div>\n      <div className=\"layout__download\">\n        <DownloadSection />\n      </div>\n      <div className=\"layout__elements\">\n        <CanvasObjectList />\n      </div>\n      <div className=\"layout__creator\">\n        <CanvasObjectCreator />\n      </div>\n      <div className=\"layout__editor\">\n        <ActiveObjectEditor />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store\"\nimport {Provider} from \"react-redux\"\nimport \"./styles/main.scss\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}